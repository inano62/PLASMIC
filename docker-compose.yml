version: "3.8"

networks:
  appnet: { driver: bridge }

services:
  web:
    image: nginx:alpine
    container_name: web
    ports:
      - "8000:80"
    volumes:
      - ./www:/var/www
      - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on: [ app ]
    networks: [ appnet ]

  app:
    build:
      context: "./docker/app/"
    container_name: app
    working_dir: /var/www
    volumes:
      - "./www:/var/www"
      # msmtp を使うなら次を有効化
      # - "./docker/msmtp/msmtprc:/etc/msmtprc"
    expose:
      - "9000"         # php-fpm の待受
    networks: [ appnet ]

#  node:
#    image: node:20-alpine
#    container_name: node
#    working_dir: /var/www
#    command: sh -lc 'npm i && npm run dev'
#    environment:
#      - VITE_DEV_SERVER_HOST=0.0.0.0
#      - VITE_PORT=5177
#    volumes:
#      - ./frontend:/var/www
#    ports:
#      - "5177:5177"    # Vite dev用（必要なときだけ）
#    networks: [ appnet ]
  next:
    image: node:20-alpine
    build:
      context: ./frontend
    container_name: next
    ports:
#      - "5176:5176"
      - "5177:5177"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NEXT_TELEMETRY_DISABLED=1
#    command: sh -lc "npm i && npm run dev"
    command: sh -lc "npm i && npx vite --host 0.0.0.0 --port 5177 --strictPort"
  mysql:
    build:
      context: "./docker/mysql/"
    command: --default-authentication-plugin=mysql_native_password
    environment:
      - MYSQL_DATABASE=test_db_name
      - MYSQL_HOST=mysql
      - MYSQL_USER=test_user
      - MYSQL_PASSWORD=test_pass
      - MYSQL_ROOT_PASSWORD=test_root_pass
      - TZ=Asia/Tokyo
    volumes:
      - "./docker/mysql/storage/:/var/lib/mysql"
      - "./docker/mysql/initdb/:/docker-entrypoint-initdb.d"
    ports:
      - "3307:3306"
    networks: [ appnet ]

  phpmyadmin:
    image: phpmyadmin:latest
    ports:
      - "8082:80"
    environment:
      - PMA_HOST=mysql
      - PMA_USER=test_user
      - PMA_PASSWORD=test_pass
    depends_on:
      - mysql
    networks: [ appnet ]

  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "8025:8025"
      - "1025:1025"
    networks: [ appnet ]

  coturn:
    image: coturn/coturn
    container_name: coturn
    ports:
      - "3478:3478/tcp"        # TCPのみ（社内NW越しの検証向け）
      # - "3478:3478/udp"
      # - "5349:5349/tcp"
      # - "49160-49200:49160-49200/udp"
    command: >
      -n --log-file=stdout --no-cli --realm=localhost
      --lt-cred-mech --user lkuser:lkpass
    networks: [ appnet ]

  livekit:
    image: livekit/livekit-server:latest
    container_name: livekit-video
    command: ["--bind","0.0.0.0"]   # ← --config を使わない
    environment:
      LIVEKIT_LOG_LEVEL: debug
      LIVEKIT_PORT: "7880"
      LIVEKIT_BIND_ADDRESSES: "0.0.0.0"
      LIVEKIT_RTC_UDP_PORT: "7882"
      LIVEKIT_RTC_TCP_PORT: "7881"
      LIVEKIT_RTC_ALLOW_TCP_FALLBACK: "true"
      LIVEKIT_RTC_FORCE_TCP: "true"
      LIVEKIT_RTC_USE_EXTERNAL_IP: "false"
      LIVEKIT_RTC_NODE_IP: "127.0.0.1"
      #      LIVEKIT_RTC_NAT_1TO1_IPS: "127.0.0.1"
      LIVEKIT_KEYS: "k1: supersecret1234567890supersecret1234"
#      LIVEKIT_KEYS: "devkey:6d1680de114c4ac0908936c8de20c4905896dbb2e2634087a87bb5ed6df986cb4"
    volumes:
      - ./docker/livekit/livekit.yaml:/etc/livekit.yaml:ro
    ports:
      - "7880:7880"
      - "7881:7881"
      - "7882:7882/udp"
    restart: unless-stopped
    networks: [ appnet ]
# ← ここに nginx の server ブロックを書かないこと！
# volumes: の下に server{...} が紛れていたのが壊れる原因です。
