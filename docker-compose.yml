version: "3.8"

networks:
  appnet: { driver: bridge }

services:
  web:
    image: nginx:alpine
    container_name: web
    ports: [ "8000:80" ]
    volumes:
      - ./www:/var/www
      - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on: [ app ]
    networks: [ appnet ]

  app:
    build: { context: "./docker/app/" }
    container_name: app
    working_dir: /var/www
    volumes: [ "./www:/var/www" ]
    expose: [ "9000" ]
    networks: [ appnet ]

  next:
#    image: node:20-alpine
    build: { context: ./frontend }
    container_name: next
    working_dir: /app
    ports: [ "5177:5177" ]
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NEXT_TELEMETRY_DISABLED=1
    command: sh -lc "npm i && npx vite --host 0.0.0.0 --port 5177 --strictPort"
    networks: [ appnet ]

  mysql:
    build: { context: "./docker/mysql/" }
    command: --default-authentication-plugin=mysql_native_password
    environment:
      - MYSQL_DATABASE=test_db_name
      - MYSQL_HOST=mysql
      - MYSQL_USER=test_user
      - MYSQL_PASSWORD=test_pass
      - MYSQL_ROOT_PASSWORD=test_root_pass
      - TZ=Asia/Tokyo
    volumes:
      - "./docker/mysql/storage/:/var/lib/mysql"
      - "./docker/mysql/initdb/:/docker-entrypoint-initdb.d"
    ports: [ "3307:3306" ]
    networks: [ appnet ]

  phpmyadmin:
    image: phpmyadmin:latest
    ports: [ "8082:80" ]
    environment:
      - PMA_HOST=mysql
      - PMA_USER=test_user
      - PMA_PASSWORD=test_pass
    depends_on: [ mysql ]
    networks: [ appnet ]

  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "8025:8025"
      - "1025:1025"
    networks: [ appnet ]

  # --- LiveKit 本体（envのみで起動） ---
  livekit:
    image: livekit/livekit-server:latest
    container_name: livekit-video
    command: [ "--bind","0.0.0.0" ]

    environment:
      LIVEKIT_LOG_LEVEL: info
      LIVEKIT_PORT: "7880"
      LIVEKIT_BIND_ADDRESSES: "0.0.0.0"
      LIVEKIT_RTC_ALLOW_TCP_FALLBACK: "true"
      LIVEKIT_TURN_ENABLED: "false"   # まずは TURN なしで立ち上げ確認
      # ← ここを “文字列ブロック” で
      LIVEKIT_KEYS: |
        k1: supersecret1234567890supersecret1234
    ports:
      - "7880:7880"
      - "7881:7881"
    restart: unless-stopped
    networks: [ appnet ]


  # --- TURN/STUN ---
  coturn:
    image: coturn/coturn:latest
    container_name: coturn
    restart: unless-stopped
    command: >
      -n --log-file=stdout --no-cli
      --realm=example.com
      --server-name=turn.example.com
      --fingerprint
      --lt-cred-mech
      --user plasmic:supersecret
      --min-port 40000 --max-port 40999
      --listening-port 3478
      --tls-listening-port 5349
    ports:
      - "3478:3478/udp"
      - "5349:5349/tcp"
      - "40000-40999:40000-40999/udp"
    networks: [ appnet ]


volumes:
  # ← top-level（servicesの外）にあること！
  caddy_data:
  caddy_config:
