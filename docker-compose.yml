version: "3.8"
networks:
  appnet: { driver: bridge }
services:
  web:
    image: nginx:alpine
    container_name: web
    ports:
      - "8000:80"
    volumes:
      - ./:/var/www
      - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on: [ app ]
    networks: [ appnet ]
  app:
    build:
      context: "docker/app/"
    ports:
      - 8080:80 
      - 8081:81
      - 5173:5173 # viteで使用するポートをフォワード
    working_dir: /var/www
    volumes:
      - "./www/:/var/www"
      - "./docker/app/apache2/apache2.conf:/etc/apache2/apache2.conf"
      - "./docker/app/apache2/sites-available/000-default.conf:/etc/apache2/sites-available/000-default.conf"
      - "./docker/msmtp/msmtprc:/etc/msmtprc"
    depends_on:
      - mysql
      - mailhog
    expose:
      - "8000"
    command: php -S 0.0.0.0:8000 -t public
    networks: [ appnet ]
  coturn:
    image: coturn/coturn
    container_name: coturn
    ports:
      - "3478:3478/tcp"        # ★ TLSなしTCPだけでOK（権限不要）
#      - "5349:5349/tcp"
#      - "3478:3478"     # TURN(udp)
#      - "5349:5349"     # TURNS(tcp/tls)
#      - "49160-49200:49160-49200/udp"  # relay用ポートレンジ
    command: >
      -n --log-file=stdout --no-cli --realm=localhost
      --lt-cred-mech --user lkuser:lkpass
#      -n --log-file=stdout --no-cli --realm=localhost
#      --min-port=49160 --max-port=49200
#      --lt-cred-mech --user lkuser:lkpass

  node:
    image: node:20-alpine
    container_name: node
    working_dir: /var/www
    command: sh -lc 'npm i && npm run dev'
    environment:
      - VITE_DEV_SERVER_HOST=0.0.0.0
    volumes:
      - ./frontend:/var/www
    ports:
      - "5177:5177"   # ← これ必須（Viteを5176で公開）
  mysql:
    build:
      context: "docker/mysql/"
    command: --default-authentication-plugin=mysql_native_password
    environment:
      - MYSQL_DATABASE=test_db_name
      - MYSQL_HOST=mysql
      - MYSQL_USER=test_user
      - MYSQL_PASSWORD=test_pass
      - MYSQL_ROOT_PASSWORD=test_root_pass
      - TZ=Asia/Tokyo
    volumes:
      - "./docker/mysql/storage/:/var/lib/mysql"
      - "./docker/mysql/initdb/:/docker-entrypoint-initdb.d"
    ports:
      - "3307:3306"

  phpmyadmin:
    image: phpmyadmin:latest
    ports:
      - "8082:80"   # ← 81を8082に変更
    environment:
      - PMA_HOST=mysql
      - PMA_USER=test_user
      - PMA_PASSWORD=test_pass
    depends_on:
      - mysql

  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "8025:8025"
      - "1025:1025"

#  livekit:
#    image: livekit/livekit-server:latest
#    container_name: livekit
#    command: ["--config","/config.yaml.example","--bind","0.0.0.0"]
#    environment:
#      - LIVEKIT_KEYS=k1:supersecret1234567890supersecret1234   # ← これがサーバの鍵になる
#    ports:
#      - "7880:7880"        # HTTP/WS
#      - "7881:7881"        # WebRTC/TCP
#      - "7882:7882/udp"    # WebRTC/UDP
#    volumes:
#      - ./livekit/config.yaml.example:/config.yaml.example:ro
#    restart: unless-stopped
#    healthcheck:
#      test: ["CMD", "wget", "-qO-", "http://127.0.0.1:7880/"]
#      interval: 10s
#      timeout: 3s
#      retries: 5
  livekit:
    image: livekit/livekit-server:latest
    container_name: livekit
    command: ["--bind","0.0.0.0"]   # ← --config を使わない
    environment:
      LIVEKIT_LOG_LEVEL: debug
      LIVEKIT_PORT: "7880"
      LIVEKIT_BIND_ADDRESSES: "0.0.0.0"
      LIVEKIT_RTC_UDP_PORT: "7882"
      LIVEKIT_RTC_TCP_PORT: "7881"
      LIVEKIT_RTC_ALLOW_TCP_FALLBACK: "true"
      LIVEKIT_RTC_FORCE_TCP: "true"
      LIVEKIT_RTC_USE_EXTERNAL_IP: "false"
      LIVEKIT_RTC_NODE_IP: "127.0.0.1"
#      LIVEKIT_RTC_NAT_1TO1_IPS: "127.0.0.1"
      LIVEKIT_KEYS: "k1: supersecret1234567890supersecret1234"
    ports:
      - "7880:7880"
      - "7881:7881"
      - "7882:7882/udp"
    restart: unless-stopped


volumes:
  storage:
